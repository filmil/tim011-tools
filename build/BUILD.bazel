load("//build:rules.bzl", "mescc_toolchain")
load("//build:sdcc.bzl", "sdcc_z180_toolchain")

toolchain_type(name = "toolchain_type_mescc")

mescc_toolchain(
    name = "mescc_linux",
    compiler = "//build:mescc_compiler",
    deps = [
        "@mescc//:libs",
        "@mescc//:includes",
        "@mescc//:cpm_binaries",
        "//CPMEmulator:cpm",
        # Flags processing
        "@gotopt2//cmd/gotopt2:gotopt2",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

toolchain(
    name = "mescc_linux_toolchain",
    exec_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    toolchain = ":mescc_linux",
    toolchain_type = ":toolchain_type_mescc",
)

sh_binary(
  name = "mescc_compiler",
  srcs = ["mescc.sh"],
  data = [
    "@mescc//:cc.com",
    "@mescc//:HEXTOCOM.COM",
    "@mescc//:ZSM.COM",
    "@mescc//:libs",
    "@mescc//:includes",
    "@mescc//:cpm_binaries",
    "//CPMEmulator:cpm",
    # Flags processing
    "@gotopt2//cmd/gotopt2:gotopt2",
  ],
  deps = [
    # To detect the runfiles dir.
    "@bazel_tools//tools/bash/runfiles",
  ],
)

sh_binary(
  name = "cpmrun",
  srcs = ["cpmrun.sh"],
  data = [
    "//CPMEmulator:cpm",
    # Flags processing
    "@gotopt2//cmd/gotopt2:gotopt2",
  ],
  deps = [
    # To detect the runfiles dir.
    "@bazel_tools//tools/bash/runfiles",
  ],
)

# SDCC toolchain definition

toolchain_type(name = "toolchain_type_sdcc_z180")

sdcc_z180_toolchain(
    name = "sdcc_z180_linux",
    assembler = "@sdcc-linux//:sdcc/bin/sdasz80",
    compiler = "@sdcc-linux//:sdcc/bin/sdcc",
    hextocom = "//third_party/hextocom",
    librarian = "@sdcc-linux//:sdcc/bin/sdar",
    linker = "@sdcc-linux//:sdcc/bin/sdldz80",
    preprocessor = "@sdcc-linux//:sdcc/bin/sdcpp",
    libs = "@sdcc-linux//:libs_z180",
    includes = "@sdcc-linux//:includes_z180",
    # Might need includes and libs.
    deps = [
        "@sdcc-linux//:libs_z180",
        "@sdcc-linux//:includes_z180",
    ],
)

toolchain(
    name = "sdcc_z180_linux_toolchain",
    exec_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    toolchain = ":sdcc_z180_linux",
    toolchain_type = ":toolchain_type_sdcc_z180",
)
